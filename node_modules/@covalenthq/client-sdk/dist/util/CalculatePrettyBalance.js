import Big from "big.js";
export const calculatePrettyBalance = (value, decimals = 18, roundOff = true, precision = 0) => {
    let bigIntValue;
    let bigDecimalValue;
    try {
        bigIntValue = BigInt(value);
        bigDecimalValue = new Big(bigIntValue.toString());
    }
    catch (error) {
        bigDecimalValue = new Big(value.toString());
    }
    const _decimals = decimals ?? 18;
    const _expoValue = BigInt(Math.pow(10, _decimals));
    const bigDecimalExpo = new Big(_expoValue.toString());
    const _calculated = bigDecimalValue.div(bigDecimalExpo);
    if (decimals === 0) {
        return _calculated.toString();
    }
    // removes the decimal places, true by default so it adds decimals
    if (!roundOff) {
        return _calculated.toString();
    }
    let _decimalFixed = precision;
    if (precision === 0) {
        _decimalFixed = 2;
        if (_calculated.lt(100)) {
            _decimalFixed = 6;
        }
    }
    return _calculated.toFixed(_decimalFixed);
};
//# sourceMappingURL=CalculatePrettyBalance.js.map